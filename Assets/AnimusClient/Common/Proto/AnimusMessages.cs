// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: animus_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Animus.Message {

  /// <summary>Holder for reflection information generated from animus_messages.proto</summary>
  public static partial class AnimusMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for animus_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimusMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhbmltdXNfbWVzc2FnZXMucHJvdG8SDmFuaW11cy5tZXNzYWdlGhNhbmlt",
            "dXNfY29tbW9uLnByb3RvIuECCg1BbmltdXNNZXNzYWdlEhAKCFNlbmRlcklE",
            "GAEgASgJEhIKClJlY2VpdmVySUQYAiABKAkSEgoKQ2xpZW50VHlwZRgDIAEo",
            "DRIOCgZBY3Rpb24YBCABKA0SEwoLQWN0aW9uU3RhdGUYBSABKA0SDwoHU3Vj",
            "Y2VzcxgGIAEoCBIMCgREYXRhGAcgASgMEhEKCVRpbWVzdGFtcBgIIAEoAxIS",
            "CgpGcmFtZWNvdW50GAkgASgDEgwKBFBhcnQYCiABKA0SIwoFRXJyb3IYCyAB",
            "KAsyFC5hbmltdXMuY29tbW9uLkVycm9yEg0KBVRva2VuGAwgASgJEhQKDENv",
            "bm5lY3Rpb25JRBgNIAEoDRITCgtDb3JlVmVyc2lvbhgOIAEoCRIVCg1DbGll",
            "bnRWZXJzaW9uGA8gASgJEhIKClNES1ZlcnNpb24YECABKAkSEwoLU0RLTGFu",
            "Z3VhZ2UYESABKAki2gEKFFJlZ2lzdGVyUm9ib3RNZXNzYWdlEgoKAklEGAEg",
            "ASgJEgwKBE1ha2UYAiABKAkSDQoFTW9kZWwYAyABKAkSDAoETmFtZRgEIAEo",
            "CRIPCgdEZXZIYXNoGAUgASgJEg8KB0xpY2Vuc2UYBiABKAkSFgoOUm9ib3RV",
            "c2VyRW1haWwYByABKAkSFQoNUm9ib3RVc2VyUGFzcxgIIAEoCRIVCg1Sb2Jv",
            "dFBhaXJDb2RlGAkgASgJEiMKBUVycm9yGAogASgLMhQuYW5pbXVzLmNvbW1v",
            "bi5FcnJvciKMAQoNU2Nhbm5lZFJvYm90cxIyCgtsb2NhbFJvYm90cxgBIAMo",
            "CzIdLmFuaW11cy5tZXNzYWdlLk5ldHdvcmtSb2JvdHMSIwoFRXJyb3IYAiAB",
            "KAsyFC5hbmltdXMuY29tbW9uLkVycm9yEhAKCHVzZXJuYW1lGAMgASgJEhAK",
            "CHBhc3N3b3JkGAQgASgJImYKDU5ldHdvcmtSb2JvdHMSCgoCSUQYASABKAkS",
            "CgoCSVAYAiABKAkSEgoKTWFjQWRkcmVzcxgDIAEoCRIMCgROYW1lGAQgASgJ",
            "Eg0KBU1vZGVsGAUgASgJEgwKBE1ha2UYBiABKAlCfgoeY29tLmN5YmVyc2Vs",
            "dmVzLmFuaW11cy5tZXNzYWdlQhJBbmltdXNNZXNzYWdlUHJvdG9IAVolZ2l0",
            "aHViLmNvbS9DeWJlcnNlbHZlcy9BbmltdXNNZXNzYWdlc6ICDUFuaW11c01l",
            "c3NhZ2WqAg5BbmltdXMuTWVzc2FnZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Animus.Common.AnimusCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Message.AnimusMessage), global::Animus.Message.AnimusMessage.Parser, new[]{ "SenderID", "ReceiverID", "ClientType", "Action", "ActionState", "Success", "Data", "Timestamp", "Framecount", "Part", "Error", "Token", "ConnectionID", "CoreVersion", "ClientVersion", "SDKVersion", "SDKLanguage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Message.RegisterRobotMessage), global::Animus.Message.RegisterRobotMessage.Parser, new[]{ "ID", "Make", "Model", "Name", "DevHash", "License", "RobotUserEmail", "RobotUserPass", "RobotPairCode", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Message.ScannedRobots), global::Animus.Message.ScannedRobots.Parser, new[]{ "LocalRobots", "Error", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Message.NetworkRobots), global::Animus.Message.NetworkRobots.Parser, new[]{ "ID", "IP", "MacAddress", "Name", "Model", "Make" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AnimusMessage : pb::IMessage<AnimusMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimusMessage> _parser = new pb::MessageParser<AnimusMessage>(() => new AnimusMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnimusMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Message.AnimusMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusMessage(AnimusMessage other) : this() {
      senderID_ = other.senderID_;
      receiverID_ = other.receiverID_;
      clientType_ = other.clientType_;
      action_ = other.action_;
      actionState_ = other.actionState_;
      success_ = other.success_;
      data_ = other.data_;
      timestamp_ = other.timestamp_;
      framecount_ = other.framecount_;
      part_ = other.part_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      token_ = other.token_;
      connectionID_ = other.connectionID_;
      coreVersion_ = other.coreVersion_;
      clientVersion_ = other.clientVersion_;
      sDKVersion_ = other.sDKVersion_;
      sDKLanguage_ = other.sDKLanguage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusMessage Clone() {
      return new AnimusMessage(this);
    }

    /// <summary>Field number for the "SenderID" field.</summary>
    public const int SenderIDFieldNumber = 1;
    private string senderID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderID {
      get { return senderID_; }
      set {
        senderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReceiverID" field.</summary>
    public const int ReceiverIDFieldNumber = 2;
    private string receiverID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverID {
      get { return receiverID_; }
      set {
        receiverID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientType" field.</summary>
    public const int ClientTypeFieldNumber = 3;
    private uint clientType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientType {
      get { return clientType_; }
      set {
        clientType_ = value;
      }
    }

    /// <summary>Field number for the "Action" field.</summary>
    public const int ActionFieldNumber = 4;
    private uint action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "ActionState" field.</summary>
    public const int ActionStateFieldNumber = 5;
    private uint actionState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionState {
      get { return actionState_; }
      set {
        actionState_ = value;
      }
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 6;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 7;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "Framecount" field.</summary>
    public const int FramecountFieldNumber = 9;
    private long framecount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Framecount {
      get { return framecount_; }
      set {
        framecount_ = value;
      }
    }

    /// <summary>Field number for the "Part" field.</summary>
    public const int PartFieldNumber = 10;
    private uint part_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Part {
      get { return part_; }
      set {
        part_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 11;
    private global::Animus.Common.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Common.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 12;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectionID" field.</summary>
    public const int ConnectionIDFieldNumber = 13;
    private uint connectionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ConnectionID {
      get { return connectionID_; }
      set {
        connectionID_ = value;
      }
    }

    /// <summary>Field number for the "CoreVersion" field.</summary>
    public const int CoreVersionFieldNumber = 14;
    private string coreVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoreVersion {
      get { return coreVersion_; }
      set {
        coreVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 15;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SDKVersion" field.</summary>
    public const int SDKVersionFieldNumber = 16;
    private string sDKVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SDKVersion {
      get { return sDKVersion_; }
      set {
        sDKVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SDKLanguage" field.</summary>
    public const int SDKLanguageFieldNumber = 17;
    private string sDKLanguage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SDKLanguage {
      get { return sDKLanguage_; }
      set {
        sDKLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnimusMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnimusMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderID != other.SenderID) return false;
      if (ReceiverID != other.ReceiverID) return false;
      if (ClientType != other.ClientType) return false;
      if (Action != other.Action) return false;
      if (ActionState != other.ActionState) return false;
      if (Success != other.Success) return false;
      if (Data != other.Data) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Framecount != other.Framecount) return false;
      if (Part != other.Part) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (Token != other.Token) return false;
      if (ConnectionID != other.ConnectionID) return false;
      if (CoreVersion != other.CoreVersion) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (SDKVersion != other.SDKVersion) return false;
      if (SDKLanguage != other.SDKLanguage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderID.Length != 0) hash ^= SenderID.GetHashCode();
      if (ReceiverID.Length != 0) hash ^= ReceiverID.GetHashCode();
      if (ClientType != 0) hash ^= ClientType.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (ActionState != 0) hash ^= ActionState.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Framecount != 0L) hash ^= Framecount.GetHashCode();
      if (Part != 0) hash ^= Part.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ConnectionID != 0) hash ^= ConnectionID.GetHashCode();
      if (CoreVersion.Length != 0) hash ^= CoreVersion.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (SDKVersion.Length != 0) hash ^= SDKVersion.GetHashCode();
      if (SDKLanguage.Length != 0) hash ^= SDKLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SenderID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderID);
      }
      if (ReceiverID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReceiverID);
      }
      if (ClientType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClientType);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Action);
      }
      if (ActionState != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActionState);
      }
      if (Success != false) {
        output.WriteRawTag(48);
        output.WriteBool(Success);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Timestamp);
      }
      if (Framecount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Framecount);
      }
      if (Part != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Part);
      }
      if (error_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Error);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Token);
      }
      if (ConnectionID != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ConnectionID);
      }
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CoreVersion);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ClientVersion);
      }
      if (SDKVersion.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SDKVersion);
      }
      if (SDKLanguage.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SDKLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SenderID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderID);
      }
      if (ReceiverID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReceiverID);
      }
      if (ClientType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClientType);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Action);
      }
      if (ActionState != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActionState);
      }
      if (Success != false) {
        output.WriteRawTag(48);
        output.WriteBool(Success);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Timestamp);
      }
      if (Framecount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Framecount);
      }
      if (Part != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Part);
      }
      if (error_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Error);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Token);
      }
      if (ConnectionID != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ConnectionID);
      }
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CoreVersion);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ClientVersion);
      }
      if (SDKVersion.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SDKVersion);
      }
      if (SDKLanguage.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SDKLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderID);
      }
      if (ReceiverID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverID);
      }
      if (ClientType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientType);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      if (ActionState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionState);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Framecount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Framecount);
      }
      if (Part != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Part);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ConnectionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionID);
      }
      if (CoreVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoreVersion);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (SDKVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SDKVersion);
      }
      if (SDKLanguage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SDKLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnimusMessage other) {
      if (other == null) {
        return;
      }
      if (other.SenderID.Length != 0) {
        SenderID = other.SenderID;
      }
      if (other.ReceiverID.Length != 0) {
        ReceiverID = other.ReceiverID;
      }
      if (other.ClientType != 0) {
        ClientType = other.ClientType;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.ActionState != 0) {
        ActionState = other.ActionState;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Framecount != 0L) {
        Framecount = other.Framecount;
      }
      if (other.Part != 0) {
        Part = other.Part;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Animus.Common.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ConnectionID != 0) {
        ConnectionID = other.ConnectionID;
      }
      if (other.CoreVersion.Length != 0) {
        CoreVersion = other.CoreVersion;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.SDKVersion.Length != 0) {
        SDKVersion = other.SDKVersion;
      }
      if (other.SDKLanguage.Length != 0) {
        SDKLanguage = other.SDKLanguage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderID = input.ReadString();
            break;
          }
          case 18: {
            ReceiverID = input.ReadString();
            break;
          }
          case 24: {
            ClientType = input.ReadUInt32();
            break;
          }
          case 32: {
            Action = input.ReadUInt32();
            break;
          }
          case 40: {
            ActionState = input.ReadUInt32();
            break;
          }
          case 48: {
            Success = input.ReadBool();
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
          case 64: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 72: {
            Framecount = input.ReadInt64();
            break;
          }
          case 80: {
            Part = input.ReadUInt32();
            break;
          }
          case 90: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 98: {
            Token = input.ReadString();
            break;
          }
          case 104: {
            ConnectionID = input.ReadUInt32();
            break;
          }
          case 114: {
            CoreVersion = input.ReadString();
            break;
          }
          case 122: {
            ClientVersion = input.ReadString();
            break;
          }
          case 130: {
            SDKVersion = input.ReadString();
            break;
          }
          case 138: {
            SDKLanguage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SenderID = input.ReadString();
            break;
          }
          case 18: {
            ReceiverID = input.ReadString();
            break;
          }
          case 24: {
            ClientType = input.ReadUInt32();
            break;
          }
          case 32: {
            Action = input.ReadUInt32();
            break;
          }
          case 40: {
            ActionState = input.ReadUInt32();
            break;
          }
          case 48: {
            Success = input.ReadBool();
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
          case 64: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 72: {
            Framecount = input.ReadInt64();
            break;
          }
          case 80: {
            Part = input.ReadUInt32();
            break;
          }
          case 90: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 98: {
            Token = input.ReadString();
            break;
          }
          case 104: {
            ConnectionID = input.ReadUInt32();
            break;
          }
          case 114: {
            CoreVersion = input.ReadString();
            break;
          }
          case 122: {
            ClientVersion = input.ReadString();
            break;
          }
          case 130: {
            SDKVersion = input.ReadString();
            break;
          }
          case 138: {
            SDKLanguage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterRobotMessage : pb::IMessage<RegisterRobotMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterRobotMessage> _parser = new pb::MessageParser<RegisterRobotMessage>(() => new RegisterRobotMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterRobotMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Message.AnimusMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterRobotMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterRobotMessage(RegisterRobotMessage other) : this() {
      iD_ = other.iD_;
      make_ = other.make_;
      model_ = other.model_;
      name_ = other.name_;
      devHash_ = other.devHash_;
      license_ = other.license_;
      robotUserEmail_ = other.robotUserEmail_;
      robotUserPass_ = other.robotUserPass_;
      robotPairCode_ = other.robotPairCode_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterRobotMessage Clone() {
      return new RegisterRobotMessage(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 2;
    private string make_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Make {
      get { return make_; }
      set {
        make_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DevHash" field.</summary>
    public const int DevHashFieldNumber = 5;
    private string devHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevHash {
      get { return devHash_; }
      set {
        devHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "License" field.</summary>
    public const int LicenseFieldNumber = 6;
    private string license_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string License {
      get { return license_; }
      set {
        license_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotUserEmail" field.</summary>
    public const int RobotUserEmailFieldNumber = 7;
    private string robotUserEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUserEmail {
      get { return robotUserEmail_; }
      set {
        robotUserEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotUserPass" field.</summary>
    public const int RobotUserPassFieldNumber = 8;
    private string robotUserPass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUserPass {
      get { return robotUserPass_; }
      set {
        robotUserPass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotPairCode" field.</summary>
    public const int RobotPairCodeFieldNumber = 9;
    private string robotPairCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotPairCode {
      get { return robotPairCode_; }
      set {
        robotPairCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 10;
    private global::Animus.Common.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Common.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterRobotMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterRobotMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Make != other.Make) return false;
      if (Model != other.Model) return false;
      if (Name != other.Name) return false;
      if (DevHash != other.DevHash) return false;
      if (License != other.License) return false;
      if (RobotUserEmail != other.RobotUserEmail) return false;
      if (RobotUserPass != other.RobotUserPass) return false;
      if (RobotPairCode != other.RobotPairCode) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (Make.Length != 0) hash ^= Make.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DevHash.Length != 0) hash ^= DevHash.GetHashCode();
      if (License.Length != 0) hash ^= License.GetHashCode();
      if (RobotUserEmail.Length != 0) hash ^= RobotUserEmail.GetHashCode();
      if (RobotUserPass.Length != 0) hash ^= RobotUserPass.GetHashCode();
      if (RobotPairCode.Length != 0) hash ^= RobotPairCode.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Make);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (DevHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DevHash);
      }
      if (License.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(License);
      }
      if (RobotUserEmail.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RobotUserEmail);
      }
      if (RobotUserPass.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RobotUserPass);
      }
      if (RobotPairCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RobotPairCode);
      }
      if (error_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Make);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (DevHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DevHash);
      }
      if (License.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(License);
      }
      if (RobotUserEmail.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RobotUserEmail);
      }
      if (RobotUserPass.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RobotUserPass);
      }
      if (RobotPairCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RobotPairCode);
      }
      if (error_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (Make.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Make);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DevHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevHash);
      }
      if (License.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(License);
      }
      if (RobotUserEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUserEmail);
      }
      if (RobotUserPass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUserPass);
      }
      if (RobotPairCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotPairCode);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterRobotMessage other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.Make.Length != 0) {
        Make = other.Make;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DevHash.Length != 0) {
        DevHash = other.DevHash;
      }
      if (other.License.Length != 0) {
        License = other.License;
      }
      if (other.RobotUserEmail.Length != 0) {
        RobotUserEmail = other.RobotUserEmail;
      }
      if (other.RobotUserPass.Length != 0) {
        RobotUserPass = other.RobotUserPass;
      }
      if (other.RobotPairCode.Length != 0) {
        RobotPairCode = other.RobotPairCode;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Animus.Common.Error();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 18: {
            Make = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            DevHash = input.ReadString();
            break;
          }
          case 50: {
            License = input.ReadString();
            break;
          }
          case 58: {
            RobotUserEmail = input.ReadString();
            break;
          }
          case 66: {
            RobotUserPass = input.ReadString();
            break;
          }
          case 74: {
            RobotPairCode = input.ReadString();
            break;
          }
          case 82: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 18: {
            Make = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            DevHash = input.ReadString();
            break;
          }
          case 50: {
            License = input.ReadString();
            break;
          }
          case 58: {
            RobotUserEmail = input.ReadString();
            break;
          }
          case 66: {
            RobotUserPass = input.ReadString();
            break;
          }
          case 74: {
            RobotPairCode = input.ReadString();
            break;
          }
          case 82: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScannedRobots : pb::IMessage<ScannedRobots>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScannedRobots> _parser = new pb::MessageParser<ScannedRobots>(() => new ScannedRobots());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedRobots> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Message.AnimusMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedRobots() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedRobots(ScannedRobots other) : this() {
      localRobots_ = other.localRobots_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedRobots Clone() {
      return new ScannedRobots(this);
    }

    /// <summary>Field number for the "localRobots" field.</summary>
    public const int LocalRobotsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Animus.Message.NetworkRobots> _repeated_localRobots_codec
        = pb::FieldCodec.ForMessage(10, global::Animus.Message.NetworkRobots.Parser);
    private readonly pbc::RepeatedField<global::Animus.Message.NetworkRobots> localRobots_ = new pbc::RepeatedField<global::Animus.Message.NetworkRobots>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Message.NetworkRobots> LocalRobots {
      get { return localRobots_; }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Animus.Common.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Common.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 4;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedRobots);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedRobots other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!localRobots_.Equals(other.localRobots_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= localRobots_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      localRobots_.WriteTo(output, _repeated_localRobots_codec);
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      localRobots_.WriteTo(ref output, _repeated_localRobots_codec);
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += localRobots_.CalculateSize(_repeated_localRobots_codec);
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedRobots other) {
      if (other == null) {
        return;
      }
      localRobots_.Add(other.localRobots_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Animus.Common.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            localRobots_.AddEntriesFrom(input, _repeated_localRobots_codec);
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            localRobots_.AddEntriesFrom(ref input, _repeated_localRobots_codec);
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Animus.Common.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NetworkRobots : pb::IMessage<NetworkRobots>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkRobots> _parser = new pb::MessageParser<NetworkRobots>(() => new NetworkRobots());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkRobots> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Message.AnimusMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRobots() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRobots(NetworkRobots other) : this() {
      iD_ = other.iD_;
      iP_ = other.iP_;
      macAddress_ = other.macAddress_;
      name_ = other.name_;
      model_ = other.model_;
      make_ = other.make_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRobots Clone() {
      return new NetworkRobots(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IP" field.</summary>
    public const int IPFieldNumber = 2;
    private string iP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IP {
      get { return iP_; }
      set {
        iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MacAddress" field.</summary>
    public const int MacAddressFieldNumber = 3;
    private string macAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Model" field.</summary>
    public const int ModelFieldNumber = 5;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Make" field.</summary>
    public const int MakeFieldNumber = 6;
    private string make_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Make {
      get { return make_; }
      set {
        make_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkRobots);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkRobots other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (IP != other.IP) return false;
      if (MacAddress != other.MacAddress) return false;
      if (Name != other.Name) return false;
      if (Model != other.Model) return false;
      if (Make != other.Make) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (IP.Length != 0) hash ^= IP.GetHashCode();
      if (MacAddress.Length != 0) hash ^= MacAddress.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Make.Length != 0) hash ^= Make.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IP);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MacAddress);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Model);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Make);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IP);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MacAddress);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Model);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Make);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (IP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
      }
      if (MacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddress);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Make.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Make);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkRobots other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.IP.Length != 0) {
        IP = other.IP;
      }
      if (other.MacAddress.Length != 0) {
        MacAddress = other.MacAddress;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Make.Length != 0) {
        Make = other.Make;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 18: {
            IP = input.ReadString();
            break;
          }
          case 26: {
            MacAddress = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Model = input.ReadString();
            break;
          }
          case 50: {
            Make = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 18: {
            IP = input.ReadString();
            break;
          }
          case 26: {
            MacAddress = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Model = input.ReadString();
            break;
          }
          case 50: {
            Make = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
