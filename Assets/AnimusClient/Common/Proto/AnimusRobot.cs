// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: animus_robot.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Animus.RobotProto {

  /// <summary>Holder for reflection information generated from animus_robot.proto</summary>
  public static partial class AnimusRobotReflection {

    #region Descriptor
    /// <summary>File descriptor for animus_robot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimusRobotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJhbmltdXNfcm9ib3QucHJvdG8SDGFuaW11cy5yb2JvdBoUYW5pbXVzX3N0",
            "cnVjdHMucHJvdG8i0gIKBVJvYm90EhAKCHJvYm90X2lkGAEgASgJEgwKBG1h",
            "a2UYAiABKAkSDQoFbW9kZWwYAyABKAkSDAoEbmFtZRgEIAEoCRIVCg1oYXJk",
            "d2FyZV9oYXNoGAUgASgJEigKB2xpY2Vuc2UYBiABKAsyFy5hbmltdXMuc3Ry",
            "dWN0cy5MaWNlbnNlEhEKCWpvaW5fZGF0ZRgHIAEoAxIvCgxyb2JvdF9jb25m",
            "aWcYCSABKAsyGS5hbmltdXMucm9ib3QuUm9ib3RDb25maWcSLQoLcm9ib3Rf",
            "c3RhdGUYCiABKAsyGC5hbmltdXMucm9ib3QuUm9ib3RTdGF0ZRITCgtDb3Jl",
            "VmVyc2lvbhgLIAEoCRIUCgxSb2JvdFZlcnNpb24YDCABKAkSFQoNRHJpdmVy",
            "VmVyc2lvbhgNIAEoCRIWCg5Ecml2ZXJMYW5ndWFnZRgOIAEoCSLEAQoLUm9i",
            "b3RDb25maWcSFAoMZW5hYmxlUmVtb3RlGAEgASgIEhgKEGF2YWlsYWJsZV9w",
            "dWJsaWMYAiABKAgSGAoQaW5wdXRfbW9kYWxpdGllcxgDIAMoCRIZChFvdXRw",
            "dXRfbW9kYWxpdGllcxgEIAMoCRIbChNpbnRlcm5hbF9tb2RhbGl0aWVzGAUg",
            "AygJEjMKDlN0ckF1ZGlvUGFyYW1zGAYgASgLMhsuYW5pbXVzLnN0cnVjdHMu",
            "QXVkaW9QYXJhbXMigAEKClJvYm90U3RhdGUSEQoJYXZhaWxhYmxlGAEgASgI",
            "EioKCGxvY2F0aW9uGAIgASgLMhguYW5pbXVzLnN0cnVjdHMuTG9jYXRpb24S",
            "CgoCSVAYAyABKAkSEwoLTmV0d29ya01vZGUYBCABKAkSEgoKTWFjQWRkcmVz",
            "cxgFIAEoCUKFAQohY29tLmN5YmVyc2VsdmVzLmFuaW11cy5yb2JvdHByb3Rv",
            "QhBBbmltdXNSb2JvdFByb3RvSAFaJWdpdGh1Yi5jb20vQ3liZXJzZWx2ZXMv",
            "QW5pbXVzTWVzc2FnZXOiAhBBbmltdXNSb2JvdFByb3RvqgIRQW5pbXVzLlJv",
            "Ym90UHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Animus.Structs.AnimusStructsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.RobotProto.Robot), global::Animus.RobotProto.Robot.Parser, new[]{ "RobotId", "Make", "Model", "Name", "HardwareHash", "License", "JoinDate", "RobotConfig", "RobotState", "CoreVersion", "RobotVersion", "DriverVersion", "DriverLanguage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.RobotProto.RobotConfig), global::Animus.RobotProto.RobotConfig.Parser, new[]{ "EnableRemote", "AvailablePublic", "InputModalities", "OutputModalities", "InternalModalities", "StrAudioParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.RobotProto.RobotState), global::Animus.RobotProto.RobotState.Parser, new[]{ "Available", "Location", "IP", "NetworkMode", "MacAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Robot : pb::IMessage<Robot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Robot> _parser = new pb::MessageParser<Robot>(() => new Robot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Robot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.RobotProto.AnimusRobotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Robot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Robot(Robot other) : this() {
      robotId_ = other.robotId_;
      make_ = other.make_;
      model_ = other.model_;
      name_ = other.name_;
      hardwareHash_ = other.hardwareHash_;
      license_ = other.license_ != null ? other.license_.Clone() : null;
      joinDate_ = other.joinDate_;
      robotConfig_ = other.robotConfig_ != null ? other.robotConfig_.Clone() : null;
      robotState_ = other.robotState_ != null ? other.robotState_.Clone() : null;
      coreVersion_ = other.coreVersion_;
      robotVersion_ = other.robotVersion_;
      driverVersion_ = other.driverVersion_;
      driverLanguage_ = other.driverLanguage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Robot Clone() {
      return new Robot(this);
    }

    /// <summary>Field number for the "robot_id" field.</summary>
    public const int RobotIdFieldNumber = 1;
    private string robotId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotId {
      get { return robotId_; }
      set {
        robotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "make" field.</summary>
    public const int MakeFieldNumber = 2;
    private string make_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Make {
      get { return make_; }
      set {
        make_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardware_hash" field.</summary>
    public const int HardwareHashFieldNumber = 5;
    private string hardwareHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HardwareHash {
      get { return hardwareHash_; }
      set {
        hardwareHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license" field.</summary>
    public const int LicenseFieldNumber = 6;
    private global::Animus.Structs.License license_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Structs.License License {
      get { return license_; }
      set {
        license_ = value;
      }
    }

    /// <summary>Field number for the "join_date" field.</summary>
    public const int JoinDateFieldNumber = 7;
    private long joinDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JoinDate {
      get { return joinDate_; }
      set {
        joinDate_ = value;
      }
    }

    /// <summary>Field number for the "robot_config" field.</summary>
    public const int RobotConfigFieldNumber = 9;
    private global::Animus.RobotProto.RobotConfig robotConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.RobotProto.RobotConfig RobotConfig {
      get { return robotConfig_; }
      set {
        robotConfig_ = value;
      }
    }

    /// <summary>Field number for the "robot_state" field.</summary>
    public const int RobotStateFieldNumber = 10;
    private global::Animus.RobotProto.RobotState robotState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.RobotProto.RobotState RobotState {
      get { return robotState_; }
      set {
        robotState_ = value;
      }
    }

    /// <summary>Field number for the "CoreVersion" field.</summary>
    public const int CoreVersionFieldNumber = 11;
    private string coreVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoreVersion {
      get { return coreVersion_; }
      set {
        coreVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotVersion" field.</summary>
    public const int RobotVersionFieldNumber = 12;
    private string robotVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotVersion {
      get { return robotVersion_; }
      set {
        robotVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DriverVersion" field.</summary>
    public const int DriverVersionFieldNumber = 13;
    private string driverVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DriverVersion {
      get { return driverVersion_; }
      set {
        driverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DriverLanguage" field.</summary>
    public const int DriverLanguageFieldNumber = 14;
    private string driverLanguage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DriverLanguage {
      get { return driverLanguage_; }
      set {
        driverLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Robot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Robot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RobotId != other.RobotId) return false;
      if (Make != other.Make) return false;
      if (Model != other.Model) return false;
      if (Name != other.Name) return false;
      if (HardwareHash != other.HardwareHash) return false;
      if (!object.Equals(License, other.License)) return false;
      if (JoinDate != other.JoinDate) return false;
      if (!object.Equals(RobotConfig, other.RobotConfig)) return false;
      if (!object.Equals(RobotState, other.RobotState)) return false;
      if (CoreVersion != other.CoreVersion) return false;
      if (RobotVersion != other.RobotVersion) return false;
      if (DriverVersion != other.DriverVersion) return false;
      if (DriverLanguage != other.DriverLanguage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RobotId.Length != 0) hash ^= RobotId.GetHashCode();
      if (Make.Length != 0) hash ^= Make.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HardwareHash.Length != 0) hash ^= HardwareHash.GetHashCode();
      if (license_ != null) hash ^= License.GetHashCode();
      if (JoinDate != 0L) hash ^= JoinDate.GetHashCode();
      if (robotConfig_ != null) hash ^= RobotConfig.GetHashCode();
      if (robotState_ != null) hash ^= RobotState.GetHashCode();
      if (CoreVersion.Length != 0) hash ^= CoreVersion.GetHashCode();
      if (RobotVersion.Length != 0) hash ^= RobotVersion.GetHashCode();
      if (DriverVersion.Length != 0) hash ^= DriverVersion.GetHashCode();
      if (DriverLanguage.Length != 0) hash ^= DriverLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RobotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RobotId);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Make);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HardwareHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HardwareHash);
      }
      if (license_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(License);
      }
      if (JoinDate != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(JoinDate);
      }
      if (robotConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RobotConfig);
      }
      if (robotState_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RobotState);
      }
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RobotVersion);
      }
      if (DriverVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DriverLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RobotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RobotId);
      }
      if (Make.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Make);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HardwareHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HardwareHash);
      }
      if (license_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(License);
      }
      if (JoinDate != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(JoinDate);
      }
      if (robotConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RobotConfig);
      }
      if (robotState_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RobotState);
      }
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RobotVersion);
      }
      if (DriverVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DriverLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RobotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotId);
      }
      if (Make.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Make);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HardwareHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareHash);
      }
      if (license_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(License);
      }
      if (JoinDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinDate);
      }
      if (robotConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RobotConfig);
      }
      if (robotState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RobotState);
      }
      if (CoreVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotVersion);
      }
      if (DriverVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Robot other) {
      if (other == null) {
        return;
      }
      if (other.RobotId.Length != 0) {
        RobotId = other.RobotId;
      }
      if (other.Make.Length != 0) {
        Make = other.Make;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HardwareHash.Length != 0) {
        HardwareHash = other.HardwareHash;
      }
      if (other.license_ != null) {
        if (license_ == null) {
          License = new global::Animus.Structs.License();
        }
        License.MergeFrom(other.License);
      }
      if (other.JoinDate != 0L) {
        JoinDate = other.JoinDate;
      }
      if (other.robotConfig_ != null) {
        if (robotConfig_ == null) {
          RobotConfig = new global::Animus.RobotProto.RobotConfig();
        }
        RobotConfig.MergeFrom(other.RobotConfig);
      }
      if (other.robotState_ != null) {
        if (robotState_ == null) {
          RobotState = new global::Animus.RobotProto.RobotState();
        }
        RobotState.MergeFrom(other.RobotState);
      }
      if (other.CoreVersion.Length != 0) {
        CoreVersion = other.CoreVersion;
      }
      if (other.RobotVersion.Length != 0) {
        RobotVersion = other.RobotVersion;
      }
      if (other.DriverVersion.Length != 0) {
        DriverVersion = other.DriverVersion;
      }
      if (other.DriverLanguage.Length != 0) {
        DriverLanguage = other.DriverLanguage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RobotId = input.ReadString();
            break;
          }
          case 18: {
            Make = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            HardwareHash = input.ReadString();
            break;
          }
          case 50: {
            if (license_ == null) {
              License = new global::Animus.Structs.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 56: {
            JoinDate = input.ReadInt64();
            break;
          }
          case 74: {
            if (robotConfig_ == null) {
              RobotConfig = new global::Animus.RobotProto.RobotConfig();
            }
            input.ReadMessage(RobotConfig);
            break;
          }
          case 82: {
            if (robotState_ == null) {
              RobotState = new global::Animus.RobotProto.RobotState();
            }
            input.ReadMessage(RobotState);
            break;
          }
          case 90: {
            CoreVersion = input.ReadString();
            break;
          }
          case 98: {
            RobotVersion = input.ReadString();
            break;
          }
          case 106: {
            DriverVersion = input.ReadString();
            break;
          }
          case 114: {
            DriverLanguage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RobotId = input.ReadString();
            break;
          }
          case 18: {
            Make = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            HardwareHash = input.ReadString();
            break;
          }
          case 50: {
            if (license_ == null) {
              License = new global::Animus.Structs.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 56: {
            JoinDate = input.ReadInt64();
            break;
          }
          case 74: {
            if (robotConfig_ == null) {
              RobotConfig = new global::Animus.RobotProto.RobotConfig();
            }
            input.ReadMessage(RobotConfig);
            break;
          }
          case 82: {
            if (robotState_ == null) {
              RobotState = new global::Animus.RobotProto.RobotState();
            }
            input.ReadMessage(RobotState);
            break;
          }
          case 90: {
            CoreVersion = input.ReadString();
            break;
          }
          case 98: {
            RobotVersion = input.ReadString();
            break;
          }
          case 106: {
            DriverVersion = input.ReadString();
            break;
          }
          case 114: {
            DriverLanguage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RobotConfig : pb::IMessage<RobotConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RobotConfig> _parser = new pb::MessageParser<RobotConfig>(() => new RobotConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.RobotProto.AnimusRobotReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotConfig(RobotConfig other) : this() {
      enableRemote_ = other.enableRemote_;
      availablePublic_ = other.availablePublic_;
      inputModalities_ = other.inputModalities_.Clone();
      outputModalities_ = other.outputModalities_.Clone();
      internalModalities_ = other.internalModalities_.Clone();
      strAudioParams_ = other.strAudioParams_ != null ? other.strAudioParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotConfig Clone() {
      return new RobotConfig(this);
    }

    /// <summary>Field number for the "enableRemote" field.</summary>
    public const int EnableRemoteFieldNumber = 1;
    private bool enableRemote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableRemote {
      get { return enableRemote_; }
      set {
        enableRemote_ = value;
      }
    }

    /// <summary>Field number for the "available_public" field.</summary>
    public const int AvailablePublicFieldNumber = 2;
    private bool availablePublic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AvailablePublic {
      get { return availablePublic_; }
      set {
        availablePublic_ = value;
      }
    }

    /// <summary>Field number for the "input_modalities" field.</summary>
    public const int InputModalitiesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_inputModalities_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> inputModalities_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputModalities {
      get { return inputModalities_; }
    }

    /// <summary>Field number for the "output_modalities" field.</summary>
    public const int OutputModalitiesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_outputModalities_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> outputModalities_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputModalities {
      get { return outputModalities_; }
    }

    /// <summary>Field number for the "internal_modalities" field.</summary>
    public const int InternalModalitiesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_internalModalities_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> internalModalities_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InternalModalities {
      get { return internalModalities_; }
    }

    /// <summary>Field number for the "StrAudioParams" field.</summary>
    public const int StrAudioParamsFieldNumber = 6;
    private global::Animus.Structs.AudioParams strAudioParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Structs.AudioParams StrAudioParams {
      get { return strAudioParams_; }
      set {
        strAudioParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableRemote != other.EnableRemote) return false;
      if (AvailablePublic != other.AvailablePublic) return false;
      if(!inputModalities_.Equals(other.inputModalities_)) return false;
      if(!outputModalities_.Equals(other.outputModalities_)) return false;
      if(!internalModalities_.Equals(other.internalModalities_)) return false;
      if (!object.Equals(StrAudioParams, other.StrAudioParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableRemote != false) hash ^= EnableRemote.GetHashCode();
      if (AvailablePublic != false) hash ^= AvailablePublic.GetHashCode();
      hash ^= inputModalities_.GetHashCode();
      hash ^= outputModalities_.GetHashCode();
      hash ^= internalModalities_.GetHashCode();
      if (strAudioParams_ != null) hash ^= StrAudioParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableRemote != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableRemote);
      }
      if (AvailablePublic != false) {
        output.WriteRawTag(16);
        output.WriteBool(AvailablePublic);
      }
      inputModalities_.WriteTo(output, _repeated_inputModalities_codec);
      outputModalities_.WriteTo(output, _repeated_outputModalities_codec);
      internalModalities_.WriteTo(output, _repeated_internalModalities_codec);
      if (strAudioParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StrAudioParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableRemote != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableRemote);
      }
      if (AvailablePublic != false) {
        output.WriteRawTag(16);
        output.WriteBool(AvailablePublic);
      }
      inputModalities_.WriteTo(ref output, _repeated_inputModalities_codec);
      outputModalities_.WriteTo(ref output, _repeated_outputModalities_codec);
      internalModalities_.WriteTo(ref output, _repeated_internalModalities_codec);
      if (strAudioParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StrAudioParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableRemote != false) {
        size += 1 + 1;
      }
      if (AvailablePublic != false) {
        size += 1 + 1;
      }
      size += inputModalities_.CalculateSize(_repeated_inputModalities_codec);
      size += outputModalities_.CalculateSize(_repeated_outputModalities_codec);
      size += internalModalities_.CalculateSize(_repeated_internalModalities_codec);
      if (strAudioParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StrAudioParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnableRemote != false) {
        EnableRemote = other.EnableRemote;
      }
      if (other.AvailablePublic != false) {
        AvailablePublic = other.AvailablePublic;
      }
      inputModalities_.Add(other.inputModalities_);
      outputModalities_.Add(other.outputModalities_);
      internalModalities_.Add(other.internalModalities_);
      if (other.strAudioParams_ != null) {
        if (strAudioParams_ == null) {
          StrAudioParams = new global::Animus.Structs.AudioParams();
        }
        StrAudioParams.MergeFrom(other.StrAudioParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableRemote = input.ReadBool();
            break;
          }
          case 16: {
            AvailablePublic = input.ReadBool();
            break;
          }
          case 26: {
            inputModalities_.AddEntriesFrom(input, _repeated_inputModalities_codec);
            break;
          }
          case 34: {
            outputModalities_.AddEntriesFrom(input, _repeated_outputModalities_codec);
            break;
          }
          case 42: {
            internalModalities_.AddEntriesFrom(input, _repeated_internalModalities_codec);
            break;
          }
          case 50: {
            if (strAudioParams_ == null) {
              StrAudioParams = new global::Animus.Structs.AudioParams();
            }
            input.ReadMessage(StrAudioParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableRemote = input.ReadBool();
            break;
          }
          case 16: {
            AvailablePublic = input.ReadBool();
            break;
          }
          case 26: {
            inputModalities_.AddEntriesFrom(ref input, _repeated_inputModalities_codec);
            break;
          }
          case 34: {
            outputModalities_.AddEntriesFrom(ref input, _repeated_outputModalities_codec);
            break;
          }
          case 42: {
            internalModalities_.AddEntriesFrom(ref input, _repeated_internalModalities_codec);
            break;
          }
          case 50: {
            if (strAudioParams_ == null) {
              StrAudioParams = new global::Animus.Structs.AudioParams();
            }
            input.ReadMessage(StrAudioParams);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RobotState : pb::IMessage<RobotState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RobotState> _parser = new pb::MessageParser<RobotState>(() => new RobotState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.RobotProto.AnimusRobotReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState(RobotState other) : this() {
      available_ = other.available_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      iP_ = other.iP_;
      networkMode_ = other.networkMode_;
      macAddress_ = other.macAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotState Clone() {
      return new RobotState(this);
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 1;
    private bool available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Animus.Structs.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Structs.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "IP" field.</summary>
    public const int IPFieldNumber = 3;
    private string iP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IP {
      get { return iP_; }
      set {
        iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NetworkMode" field.</summary>
    public const int NetworkModeFieldNumber = 4;
    private string networkMode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkMode {
      get { return networkMode_; }
      set {
        networkMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MacAddress" field.</summary>
    public const int MacAddressFieldNumber = 5;
    private string macAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Available != other.Available) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (IP != other.IP) return false;
      if (NetworkMode != other.NetworkMode) return false;
      if (MacAddress != other.MacAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Available != false) hash ^= Available.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (IP.Length != 0) hash ^= IP.GetHashCode();
      if (NetworkMode.Length != 0) hash ^= NetworkMode.GetHashCode();
      if (MacAddress.Length != 0) hash ^= MacAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Available != false) {
        output.WriteRawTag(8);
        output.WriteBool(Available);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IP);
      }
      if (NetworkMode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NetworkMode);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MacAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Available != false) {
        output.WriteRawTag(8);
        output.WriteBool(Available);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IP);
      }
      if (NetworkMode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NetworkMode);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MacAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Available != false) {
        size += 1 + 1;
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (IP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
      }
      if (NetworkMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkMode);
      }
      if (MacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotState other) {
      if (other == null) {
        return;
      }
      if (other.Available != false) {
        Available = other.Available;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Animus.Structs.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.IP.Length != 0) {
        IP = other.IP;
      }
      if (other.NetworkMode.Length != 0) {
        NetworkMode = other.NetworkMode;
      }
      if (other.MacAddress.Length != 0) {
        MacAddress = other.MacAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Available = input.ReadBool();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Animus.Structs.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            IP = input.ReadString();
            break;
          }
          case 34: {
            NetworkMode = input.ReadString();
            break;
          }
          case 42: {
            MacAddress = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Available = input.ReadBool();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Animus.Structs.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            IP = input.ReadString();
            break;
          }
          case 34: {
            NetworkMode = input.ReadString();
            break;
          }
          case 42: {
            MacAddress = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
