// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: animus_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Animus.Common {

  /// <summary>Holder for reflection information generated from animus_common.proto</summary>
  public static partial class AnimusCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for animus_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimusCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNhbmltdXNfY29tbW9uLnByb3RvEg1hbmltdXMuY29tbW9uIjsKBUVycm9y",
            "Eg8KB3N1Y2Nlc3MYASABKAgSDAoEY29kZRgCIAEoBRITCgtkZXNjcmlwdGlv",
            "bhgDIAEoCSKWAQoLVmVyc2lvbkluZm8SEwoLQ29yZVZlcnNpb24YASABKAkS",
            "FAoMUm9ib3RWZXJzaW9uGAIgASgJEhUKDUNsaWVudFZlcnNpb24YAyABKAkS",
            "FgoOQ2xpZW50TGFuZ3VhZ2UYBCABKAkSFQoNRHJpdmVyVmVyc2lvbhgFIAEo",
            "CRIWCg5Ecml2ZXJMYW5ndWFnZRgGIAEoCUJ6Ch1jb20uY3liZXJzZWx2ZXMu",
            "YW5pbXVzLmNvbW1vbkIRQW5pbXVzQ29tbW9uUHJvdG9IAVolZ2l0aHViLmNv",
            "bS9DeWJlcnNlbHZlcy9BbmltdXNNZXNzYWdlc6ICDEFuaW11c0NvbW1vbqoC",
            "DUFuaW11cy5Db21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Common.Error), global::Animus.Common.Error.Parser, new[]{ "Success", "Code", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Common.VersionInfo), global::Animus.Common.VersionInfo.Parser, new[]{ "CoreVersion", "RobotVersion", "ClientVersion", "ClientLanguage", "DriverVersion", "DriverLanguage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Error : pb::IMessage<Error>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Common.AnimusCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      success_ = other.success_;
      code_ = other.code_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Code != other.Code) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VersionInfo : pb::IMessage<VersionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VersionInfo> _parser = new pb::MessageParser<VersionInfo>(() => new VersionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Common.AnimusCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo(VersionInfo other) : this() {
      coreVersion_ = other.coreVersion_;
      robotVersion_ = other.robotVersion_;
      clientVersion_ = other.clientVersion_;
      clientLanguage_ = other.clientLanguage_;
      driverVersion_ = other.driverVersion_;
      driverLanguage_ = other.driverLanguage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionInfo Clone() {
      return new VersionInfo(this);
    }

    /// <summary>Field number for the "CoreVersion" field.</summary>
    public const int CoreVersionFieldNumber = 1;
    private string coreVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CoreVersion {
      get { return coreVersion_; }
      set {
        coreVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotVersion" field.</summary>
    public const int RobotVersionFieldNumber = 2;
    private string robotVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotVersion {
      get { return robotVersion_; }
      set {
        robotVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 3;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientLanguage" field.</summary>
    public const int ClientLanguageFieldNumber = 4;
    private string clientLanguage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientLanguage {
      get { return clientLanguage_; }
      set {
        clientLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DriverVersion" field.</summary>
    public const int DriverVersionFieldNumber = 5;
    private string driverVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DriverVersion {
      get { return driverVersion_; }
      set {
        driverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DriverLanguage" field.</summary>
    public const int DriverLanguageFieldNumber = 6;
    private string driverLanguage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DriverLanguage {
      get { return driverLanguage_; }
      set {
        driverLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CoreVersion != other.CoreVersion) return false;
      if (RobotVersion != other.RobotVersion) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (ClientLanguage != other.ClientLanguage) return false;
      if (DriverVersion != other.DriverVersion) return false;
      if (DriverLanguage != other.DriverLanguage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CoreVersion.Length != 0) hash ^= CoreVersion.GetHashCode();
      if (RobotVersion.Length != 0) hash ^= RobotVersion.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (ClientLanguage.Length != 0) hash ^= ClientLanguage.GetHashCode();
      if (DriverVersion.Length != 0) hash ^= DriverVersion.GetHashCode();
      if (DriverLanguage.Length != 0) hash ^= DriverLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RobotVersion);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientVersion);
      }
      if (ClientLanguage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientLanguage);
      }
      if (DriverVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DriverLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CoreVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RobotVersion);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientVersion);
      }
      if (ClientLanguage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientLanguage);
      }
      if (DriverVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DriverLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CoreVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CoreVersion);
      }
      if (RobotVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotVersion);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (ClientLanguage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientLanguage);
      }
      if (DriverVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverVersion);
      }
      if (DriverLanguage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionInfo other) {
      if (other == null) {
        return;
      }
      if (other.CoreVersion.Length != 0) {
        CoreVersion = other.CoreVersion;
      }
      if (other.RobotVersion.Length != 0) {
        RobotVersion = other.RobotVersion;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.ClientLanguage.Length != 0) {
        ClientLanguage = other.ClientLanguage;
      }
      if (other.DriverVersion.Length != 0) {
        DriverVersion = other.DriverVersion;
      }
      if (other.DriverLanguage.Length != 0) {
        DriverLanguage = other.DriverLanguage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CoreVersion = input.ReadString();
            break;
          }
          case 18: {
            RobotVersion = input.ReadString();
            break;
          }
          case 26: {
            ClientVersion = input.ReadString();
            break;
          }
          case 34: {
            ClientLanguage = input.ReadString();
            break;
          }
          case 42: {
            DriverVersion = input.ReadString();
            break;
          }
          case 50: {
            DriverLanguage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CoreVersion = input.ReadString();
            break;
          }
          case 18: {
            RobotVersion = input.ReadString();
            break;
          }
          case 26: {
            ClientVersion = input.ReadString();
            break;
          }
          case 34: {
            ClientLanguage = input.ReadString();
            break;
          }
          case 42: {
            DriverVersion = input.ReadString();
            break;
          }
          case 50: {
            DriverLanguage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
