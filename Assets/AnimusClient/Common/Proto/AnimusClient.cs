// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: animus_client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Animus.ClientProto {

  /// <summary>Holder for reflection information generated from animus_client.proto</summary>
  public static partial class AnimusClientReflection {

    #region Descriptor
    /// <summary>File descriptor for animus_client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimusClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNhbmltdXNfY2xpZW50LnByb3RvEg1hbmltdXMuY2xpZW50GhRhbmltdXNf",
            "c3RydWN0cy5wcm90byLjAQoEVXNlchIPCgd1c2VyX2lkGAEgASgJEg0KBWVt",
            "YWlsGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJEgwKBG5hbWUYBCABKAkSEQoJ",
            "eWVhcl9ib3JuGAUgASgFEg8KB2NvdW50cnkYBiABKAkSEQoJbWFya2V0aW5n",
            "GAcgASgIEhMKC3Rlcm1zYWdyZWVkGAggASgIEg8KB2NvbXBhbnkYCSABKAkS",
            "EgoKcHJvZmVzc2lvbhgKIAEoCRIRCglqb2luX2RhdGUYCyABKAMSFwoPZW1h",
            "aWxfdmFsaWRhdGVkGAwgASgIIsYBCgxVc2VyTGljZW5zZXMSDQoFRW1haWwY",
            "ASABKAkSNAoOYXNzZXRfbGljZW5zZXMYAyADKAsyHC5hbmltdXMuc3RydWN0",
            "cy5Bc3NldExpY2Vuc2USNAoOcm9ib3RfbGljZW5zZXMYBCADKAsyHC5hbmlt",
            "dXMuc3RydWN0cy5Sb2JvdExpY2Vuc2USOwoVc2hhcmVkX3JvYm90X2xpY2Vu",
            "c2VzGAUgAygLMhwuYW5pbXVzLnN0cnVjdHMuUm9ib3RMaWNlbnNlQokBCiJj",
            "b20uY3liZXJzZWx2ZXMuYW5pbXVzLmNsaWVudHByb3RvQhFBbmltdXNDbGll",
            "bnRQcm90b0gBWiVnaXRodWIuY29tL0N5YmVyc2VsdmVzL0FuaW11c01lc3Nh",
            "Z2VzogIRQW5pbXVzQ2xpZW50UHJvdG+qAhJBbmltdXMuQ2xpZW50UHJvdG9i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Animus.Structs.AnimusStructsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.ClientProto.User), global::Animus.ClientProto.User.Parser, new[]{ "UserId", "Email", "Password", "Name", "YearBorn", "Country", "Marketing", "Termsagreed", "Company", "Profession", "JoinDate", "EmailValidated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.ClientProto.UserLicenses), global::Animus.ClientProto.UserLicenses.Parser, new[]{ "Email", "AssetLicenses", "RobotLicenses", "SharedRobotLicenses" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.ClientProto.AnimusClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      userId_ = other.userId_;
      email_ = other.email_;
      password_ = other.password_;
      name_ = other.name_;
      yearBorn_ = other.yearBorn_;
      country_ = other.country_;
      marketing_ = other.marketing_;
      termsagreed_ = other.termsagreed_;
      company_ = other.company_;
      profession_ = other.profession_;
      joinDate_ = other.joinDate_;
      emailValidated_ = other.emailValidated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "year_born" field.</summary>
    public const int YearBornFieldNumber = 5;
    private int yearBorn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YearBorn {
      get { return yearBorn_; }
      set {
        yearBorn_ = value;
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "marketing" field.</summary>
    public const int MarketingFieldNumber = 7;
    private bool marketing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Marketing {
      get { return marketing_; }
      set {
        marketing_ = value;
      }
    }

    /// <summary>Field number for the "termsagreed" field.</summary>
    public const int TermsagreedFieldNumber = 8;
    private bool termsagreed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Termsagreed {
      get { return termsagreed_; }
      set {
        termsagreed_ = value;
      }
    }

    /// <summary>Field number for the "company" field.</summary>
    public const int CompanyFieldNumber = 9;
    private string company_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profession" field.</summary>
    public const int ProfessionFieldNumber = 10;
    private string profession_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Profession {
      get { return profession_; }
      set {
        profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "join_date" field.</summary>
    public const int JoinDateFieldNumber = 11;
    private long joinDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long JoinDate {
      get { return joinDate_; }
      set {
        joinDate_ = value;
      }
    }

    /// <summary>Field number for the "email_validated" field.</summary>
    public const int EmailValidatedFieldNumber = 12;
    private bool emailValidated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailValidated {
      get { return emailValidated_; }
      set {
        emailValidated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (Name != other.Name) return false;
      if (YearBorn != other.YearBorn) return false;
      if (Country != other.Country) return false;
      if (Marketing != other.Marketing) return false;
      if (Termsagreed != other.Termsagreed) return false;
      if (Company != other.Company) return false;
      if (Profession != other.Profession) return false;
      if (JoinDate != other.JoinDate) return false;
      if (EmailValidated != other.EmailValidated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (YearBorn != 0) hash ^= YearBorn.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Marketing != false) hash ^= Marketing.GetHashCode();
      if (Termsagreed != false) hash ^= Termsagreed.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (Profession.Length != 0) hash ^= Profession.GetHashCode();
      if (JoinDate != 0L) hash ^= JoinDate.GetHashCode();
      if (EmailValidated != false) hash ^= EmailValidated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (YearBorn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(YearBorn);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (Marketing != false) {
        output.WriteRawTag(56);
        output.WriteBool(Marketing);
      }
      if (Termsagreed != false) {
        output.WriteRawTag(64);
        output.WriteBool(Termsagreed);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Company);
      }
      if (Profession.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Profession);
      }
      if (JoinDate != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(JoinDate);
      }
      if (EmailValidated != false) {
        output.WriteRawTag(96);
        output.WriteBool(EmailValidated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (YearBorn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(YearBorn);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (Marketing != false) {
        output.WriteRawTag(56);
        output.WriteBool(Marketing);
      }
      if (Termsagreed != false) {
        output.WriteRawTag(64);
        output.WriteBool(Termsagreed);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Company);
      }
      if (Profession.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Profession);
      }
      if (JoinDate != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(JoinDate);
      }
      if (EmailValidated != false) {
        output.WriteRawTag(96);
        output.WriteBool(EmailValidated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (YearBorn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YearBorn);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Marketing != false) {
        size += 1 + 1;
      }
      if (Termsagreed != false) {
        size += 1 + 1;
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (Profession.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
      }
      if (JoinDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinDate);
      }
      if (EmailValidated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.YearBorn != 0) {
        YearBorn = other.YearBorn;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Marketing != false) {
        Marketing = other.Marketing;
      }
      if (other.Termsagreed != false) {
        Termsagreed = other.Termsagreed;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.Profession.Length != 0) {
        Profession = other.Profession;
      }
      if (other.JoinDate != 0L) {
        JoinDate = other.JoinDate;
      }
      if (other.EmailValidated != false) {
        EmailValidated = other.EmailValidated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            YearBorn = input.ReadInt32();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 56: {
            Marketing = input.ReadBool();
            break;
          }
          case 64: {
            Termsagreed = input.ReadBool();
            break;
          }
          case 74: {
            Company = input.ReadString();
            break;
          }
          case 82: {
            Profession = input.ReadString();
            break;
          }
          case 88: {
            JoinDate = input.ReadInt64();
            break;
          }
          case 96: {
            EmailValidated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            YearBorn = input.ReadInt32();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 56: {
            Marketing = input.ReadBool();
            break;
          }
          case 64: {
            Termsagreed = input.ReadBool();
            break;
          }
          case 74: {
            Company = input.ReadString();
            break;
          }
          case 82: {
            Profession = input.ReadString();
            break;
          }
          case 88: {
            JoinDate = input.ReadInt64();
            break;
          }
          case 96: {
            EmailValidated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserLicenses : pb::IMessage<UserLicenses>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLicenses> _parser = new pb::MessageParser<UserLicenses>(() => new UserLicenses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLicenses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.ClientProto.AnimusClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicenses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicenses(UserLicenses other) : this() {
      email_ = other.email_;
      assetLicenses_ = other.assetLicenses_.Clone();
      robotLicenses_ = other.robotLicenses_.Clone();
      sharedRobotLicenses_ = other.sharedRobotLicenses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLicenses Clone() {
      return new UserLicenses(this);
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_licenses" field.</summary>
    public const int AssetLicensesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Animus.Structs.AssetLicense> _repeated_assetLicenses_codec
        = pb::FieldCodec.ForMessage(26, global::Animus.Structs.AssetLicense.Parser);
    private readonly pbc::RepeatedField<global::Animus.Structs.AssetLicense> assetLicenses_ = new pbc::RepeatedField<global::Animus.Structs.AssetLicense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Structs.AssetLicense> AssetLicenses {
      get { return assetLicenses_; }
    }

    /// <summary>Field number for the "robot_licenses" field.</summary>
    public const int RobotLicensesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Animus.Structs.RobotLicense> _repeated_robotLicenses_codec
        = pb::FieldCodec.ForMessage(34, global::Animus.Structs.RobotLicense.Parser);
    private readonly pbc::RepeatedField<global::Animus.Structs.RobotLicense> robotLicenses_ = new pbc::RepeatedField<global::Animus.Structs.RobotLicense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Structs.RobotLicense> RobotLicenses {
      get { return robotLicenses_; }
    }

    /// <summary>Field number for the "shared_robot_licenses" field.</summary>
    public const int SharedRobotLicensesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Animus.Structs.RobotLicense> _repeated_sharedRobotLicenses_codec
        = pb::FieldCodec.ForMessage(42, global::Animus.Structs.RobotLicense.Parser);
    private readonly pbc::RepeatedField<global::Animus.Structs.RobotLicense> sharedRobotLicenses_ = new pbc::RepeatedField<global::Animus.Structs.RobotLicense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Structs.RobotLicense> SharedRobotLicenses {
      get { return sharedRobotLicenses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLicenses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLicenses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if(!assetLicenses_.Equals(other.assetLicenses_)) return false;
      if(!robotLicenses_.Equals(other.robotLicenses_)) return false;
      if(!sharedRobotLicenses_.Equals(other.sharedRobotLicenses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      hash ^= assetLicenses_.GetHashCode();
      hash ^= robotLicenses_.GetHashCode();
      hash ^= sharedRobotLicenses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      assetLicenses_.WriteTo(output, _repeated_assetLicenses_codec);
      robotLicenses_.WriteTo(output, _repeated_robotLicenses_codec);
      sharedRobotLicenses_.WriteTo(output, _repeated_sharedRobotLicenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      assetLicenses_.WriteTo(ref output, _repeated_assetLicenses_codec);
      robotLicenses_.WriteTo(ref output, _repeated_robotLicenses_codec);
      sharedRobotLicenses_.WriteTo(ref output, _repeated_sharedRobotLicenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += assetLicenses_.CalculateSize(_repeated_assetLicenses_codec);
      size += robotLicenses_.CalculateSize(_repeated_robotLicenses_codec);
      size += sharedRobotLicenses_.CalculateSize(_repeated_sharedRobotLicenses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLicenses other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      assetLicenses_.Add(other.assetLicenses_);
      robotLicenses_.Add(other.robotLicenses_);
      sharedRobotLicenses_.Add(other.sharedRobotLicenses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            assetLicenses_.AddEntriesFrom(input, _repeated_assetLicenses_codec);
            break;
          }
          case 34: {
            robotLicenses_.AddEntriesFrom(input, _repeated_robotLicenses_codec);
            break;
          }
          case 42: {
            sharedRobotLicenses_.AddEntriesFrom(input, _repeated_sharedRobotLicenses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            assetLicenses_.AddEntriesFrom(ref input, _repeated_assetLicenses_codec);
            break;
          }
          case 34: {
            robotLicenses_.AddEntriesFrom(ref input, _repeated_robotLicenses_codec);
            break;
          }
          case 42: {
            sharedRobotLicenses_.AddEntriesFrom(ref input, _repeated_sharedRobotLicenses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
