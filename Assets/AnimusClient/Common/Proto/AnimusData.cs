// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: animus_data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Animus.Data {

  /// <summary>Holder for reflection information generated from animus_data.proto</summary>
  public static partial class AnimusDataReflection {

    #region Descriptor
    /// <summary>File descriptor for animus_data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimusDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFhbmltdXNfZGF0YS5wcm90bxILYW5pbXVzLmRhdGEiVwoIVGltZVN5bmMS",
            "EQoJVE9yaWdpbl8wGAEgASgDEhEKCVRSZWNlaXZlchgCIAEoAxIRCglUT3Jp",
            "Z2luXzEYAyABKAMSEgoKUmV0dXJuVHJpcBgEIAEoCCLfAQoLRGF0YU1lc3Nh",
            "Z2USNAoJZGF0YV90eXBlGAEgASgOMiEuYW5pbXVzLmRhdGEuRGF0YU1lc3Nh",
            "Z2UuRGF0YVR5cGUSDAoEZGF0YRgCIAEoDBIRCgl0aW1lc3RhbXAYAyABKAMi",
            "eQoIRGF0YVR5cGUSCwoHVU5LTk9XThAAEgkKBUlNQUdFEAESCQoFQVVESU8Q",
            "AhIKCgZTVFJJTkcQAxIOCgpGTE9BVDMyQVJSEAQSDAoISU5UNjRBUlIQBRIL",
            "CgdDT01NQU5EEAYSCQoFTU9UT1IQBxIICgRCTE9CEAgiLQoHQ29tbWFuZBIP",
            "Cgdjb21tYW5kGAEgASgJEhEKCXRpbWVzdGFtcBgCIAEoAyJsCglUcmFuc2Zv",
            "cm0SLAoIcG9zaXRpb24YASABKAsyGi5hbmltdXMuZGF0YS5BbmltdXNWZWN0",
            "b3IzEjEKCnF1YXRlcm5pb24YAiABKAsyHS5hbmltdXMuZGF0YS5BbmltdXNR",
            "dWF0ZXJuaW9uIlIKEEFuaW11c1F1YXRlcm5pb24SDgoGcXVhdF94GAEgASgC",
            "Eg4KBnF1YXRfeRgCIAEoAhIOCgZxdWF0X3cYAyABKAISDgoGcXVhdF96GAQg",
            "ASgCIjAKDUFuaW11c1ZlY3RvcjMSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkK",
            "AXoYAyABKAIimwEKC0VuZEVmZmVjdG9yEgwKBG5hbWUYASABKAkSKQoJdHJh",
            "bnNmb3JtGAIgASgLMhYuYW5pbXVzLmRhdGEuVHJhbnNmb3JtEg8KB2VuYWJs",
            "ZWQYAyABKAgSDgoGYW5nbGVzGAQgAygCIjIKCUFuZ2xlVHlwZRILCgdVTktO",
            "T1dOEAASCwoHUkFESUFOUxABEgsKB0RFR1JFRVMQAiKXAQoLTW90b3JTYW1w",
            "bGUSKAoESGVhZBgBIAEoCzIaLmFuaW11cy5kYXRhLkFuaW11c1ZlY3RvcjMS",
            "LgoKTG9jb21vdGlvbhgCIAEoCzIaLmFuaW11cy5kYXRhLkFuaW11c1ZlY3Rv",
            "cjMSLgoMRW5kRWZmZWN0b3JzGAMgAygLMhguYW5pbXVzLmRhdGEuRW5kRWZm",
            "ZWN0b3IiOQoMSW1hZ2VTYW1wbGVzEikKB3NhbXBsZXMYASADKAsyGC5hbmlt",
            "dXMuZGF0YS5JbWFnZVNhbXBsZSLdAgoLSW1hZ2VTYW1wbGUSDgoGc291cmNl",
            "GAEgASgJEgwKBGRhdGEYAiABKAwSEgoKZGF0YV9zaGFwZRgDIAMoDRI/Cgtj",
            "b21wcmVzc2lvbhgEIAEoDjIqLmFuaW11cy5kYXRhLkltYWdlU2FtcGxlLkNv",
            "bXByZXNzaW9uRm9ybWF0EjYKCmltYWdlX3R5cGUYBSABKA4yIi5hbmltdXMu",
            "ZGF0YS5JbWFnZVNhbXBsZS5JbWFnZVR5cGUSKQoJdHJhbnNmb3JtGAYgASgL",
            "MhYuYW5pbXVzLmRhdGEuVHJhbnNmb3JtEhQKDGZyYW1lX251bWJlchgHIAEo",
            "BCJBChFDb21wcmVzc2lvbkZvcm1hdBIICgRIMjY0EAASBwoDVlA4EAESBwoD",
            "VlA5EAISBwoDSlBHEAMSBwoDUkFXEAQiHwoJSW1hZ2VUeXBlEgcKA1JHQhAA",
            "EgkKBURFUFRIEAEiVgoKQmxvYlNhbXBsZRISCgpCeXRlc0FycmF5GAEgAygM",
            "EhAKCEludEFycmF5GAIgAygDEhIKCkZsb2F0QXJyYXkYAyADKAISDgoGU3Ry",
            "aW5nGAQgASgJIjkKDEF1ZGlvU2FtcGxlcxIpCgdzYW1wbGVzGAEgAygLMhgu",
            "YW5pbXVzLmRhdGEuQXVkaW9TYW1wbGUi/AEKC0F1ZGlvU2FtcGxlEg4KBnNv",
            "dXJjZRgBIAEoCRIMCgRkYXRhGAIgASgMEhAKCGNoYW5uZWxzGAMgASgNEhMK",
            "C3NhbXBsZV9yYXRlGAQgASgEEhMKC251bV9zYW1wbGVzGAUgASgEEj8KC2Nv",
            "bXByZXNzaW9uGAYgASgOMiouYW5pbXVzLmRhdGEuQXVkaW9TYW1wbGUuQ29t",
            "cHJlc3Npb25Gb3JtYXQSKQoJdHJhbnNmb3JtGAcgASgLMhYuYW5pbXVzLmRh",
            "dGEuVHJhbnNmb3JtIicKEUNvbXByZXNzaW9uRm9ybWF0EgcKA1JBVxAAEgkK",
            "BVNQRUVYEAEiHAoMU3RyaW5nU2FtcGxlEgwKBGRhdGEYASABKAkiHAoMRmxv",
            "YXQzMkFycmF5EgwKBGRhdGEYASADKAIiGgoKSW50NjRBcnJheRIMCgRkYXRh",
            "GAEgAygDQnIKG2NvbS5jeWJlcnNlbHZlcy5hbmltdXMuZGF0YUIPQW5pbXVz",
            "RGF0YVByb3RvSAFaJWdpdGh1Yi5jb20vQ3liZXJzZWx2ZXMvQW5pbXVzTWVz",
            "c2FnZXOiAgpBbmltdXNEYXRhqgILQW5pbXVzLkRhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.TimeSync), global::Animus.Data.TimeSync.Parser, new[]{ "TOrigin0", "TReceiver", "TOrigin1", "ReturnTrip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.DataMessage), global::Animus.Data.DataMessage.Parser, new[]{ "DataType", "Data", "Timestamp" }, null, new[]{ typeof(global::Animus.Data.DataMessage.Types.DataType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.Command), global::Animus.Data.Command.Parser, new[]{ "Command_", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.Transform), global::Animus.Data.Transform.Parser, new[]{ "Position", "Quaternion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.AnimusQuaternion), global::Animus.Data.AnimusQuaternion.Parser, new[]{ "QuatX", "QuatY", "QuatW", "QuatZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.AnimusVector3), global::Animus.Data.AnimusVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.EndEffector), global::Animus.Data.EndEffector.Parser, new[]{ "Name", "Transform", "Enabled", "Angles" }, null, new[]{ typeof(global::Animus.Data.EndEffector.Types.AngleType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.MotorSample), global::Animus.Data.MotorSample.Parser, new[]{ "Head", "Locomotion", "EndEffectors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.ImageSamples), global::Animus.Data.ImageSamples.Parser, new[]{ "Samples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.ImageSample), global::Animus.Data.ImageSample.Parser, new[]{ "Source", "Data", "DataShape", "Compression", "ImageType", "Transform", "FrameNumber" }, null, new[]{ typeof(global::Animus.Data.ImageSample.Types.CompressionFormat), typeof(global::Animus.Data.ImageSample.Types.ImageType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.BlobSample), global::Animus.Data.BlobSample.Parser, new[]{ "BytesArray", "IntArray", "FloatArray", "String" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.AudioSamples), global::Animus.Data.AudioSamples.Parser, new[]{ "Samples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.AudioSample), global::Animus.Data.AudioSample.Parser, new[]{ "Source", "Data", "Channels", "SampleRate", "NumSamples", "Compression", "Transform" }, null, new[]{ typeof(global::Animus.Data.AudioSample.Types.CompressionFormat) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.StringSample), global::Animus.Data.StringSample.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.Float32Array), global::Animus.Data.Float32Array.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Animus.Data.Int64Array), global::Animus.Data.Int64Array.Parser, new[]{ "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TimeSync : pb::IMessage<TimeSync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSync> _parser = new pb::MessageParser<TimeSync>(() => new TimeSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSync(TimeSync other) : this() {
      tOrigin0_ = other.tOrigin0_;
      tReceiver_ = other.tReceiver_;
      tOrigin1_ = other.tOrigin1_;
      returnTrip_ = other.returnTrip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSync Clone() {
      return new TimeSync(this);
    }

    /// <summary>Field number for the "TOrigin_0" field.</summary>
    public const int TOrigin0FieldNumber = 1;
    private long tOrigin0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TOrigin0 {
      get { return tOrigin0_; }
      set {
        tOrigin0_ = value;
      }
    }

    /// <summary>Field number for the "TReceiver" field.</summary>
    public const int TReceiverFieldNumber = 2;
    private long tReceiver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TReceiver {
      get { return tReceiver_; }
      set {
        tReceiver_ = value;
      }
    }

    /// <summary>Field number for the "TOrigin_1" field.</summary>
    public const int TOrigin1FieldNumber = 3;
    private long tOrigin1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TOrigin1 {
      get { return tOrigin1_; }
      set {
        tOrigin1_ = value;
      }
    }

    /// <summary>Field number for the "ReturnTrip" field.</summary>
    public const int ReturnTripFieldNumber = 4;
    private bool returnTrip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnTrip {
      get { return returnTrip_; }
      set {
        returnTrip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TOrigin0 != other.TOrigin0) return false;
      if (TReceiver != other.TReceiver) return false;
      if (TOrigin1 != other.TOrigin1) return false;
      if (ReturnTrip != other.ReturnTrip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TOrigin0 != 0L) hash ^= TOrigin0.GetHashCode();
      if (TReceiver != 0L) hash ^= TReceiver.GetHashCode();
      if (TOrigin1 != 0L) hash ^= TOrigin1.GetHashCode();
      if (ReturnTrip != false) hash ^= ReturnTrip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TOrigin0 != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TOrigin0);
      }
      if (TReceiver != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TReceiver);
      }
      if (TOrigin1 != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TOrigin1);
      }
      if (ReturnTrip != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReturnTrip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TOrigin0 != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TOrigin0);
      }
      if (TReceiver != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TReceiver);
      }
      if (TOrigin1 != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TOrigin1);
      }
      if (ReturnTrip != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReturnTrip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TOrigin0 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TOrigin0);
      }
      if (TReceiver != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TReceiver);
      }
      if (TOrigin1 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TOrigin1);
      }
      if (ReturnTrip != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSync other) {
      if (other == null) {
        return;
      }
      if (other.TOrigin0 != 0L) {
        TOrigin0 = other.TOrigin0;
      }
      if (other.TReceiver != 0L) {
        TReceiver = other.TReceiver;
      }
      if (other.TOrigin1 != 0L) {
        TOrigin1 = other.TOrigin1;
      }
      if (other.ReturnTrip != false) {
        ReturnTrip = other.ReturnTrip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TOrigin0 = input.ReadInt64();
            break;
          }
          case 16: {
            TReceiver = input.ReadInt64();
            break;
          }
          case 24: {
            TOrigin1 = input.ReadInt64();
            break;
          }
          case 32: {
            ReturnTrip = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TOrigin0 = input.ReadInt64();
            break;
          }
          case 16: {
            TReceiver = input.ReadInt64();
            break;
          }
          case 24: {
            TOrigin1 = input.ReadInt64();
            break;
          }
          case 32: {
            ReturnTrip = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DataMessage : pb::IMessage<DataMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataMessage> _parser = new pb::MessageParser<DataMessage>(() => new DataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage(DataMessage other) : this() {
      dataType_ = other.dataType_;
      data_ = other.data_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataMessage Clone() {
      return new DataMessage(this);
    }

    /// <summary>Field number for the "data_type" field.</summary>
    public const int DataTypeFieldNumber = 1;
    private global::Animus.Data.DataMessage.Types.DataType dataType_ = global::Animus.Data.DataMessage.Types.DataType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.DataMessage.Types.DataType DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataType != other.DataType) return false;
      if (Data != other.Data) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataType != global::Animus.Data.DataMessage.Types.DataType.Unknown) hash ^= DataType.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataType != global::Animus.Data.DataMessage.Types.DataType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataType != global::Animus.Data.DataMessage.Types.DataType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataType != global::Animus.Data.DataMessage.Types.DataType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataMessage other) {
      if (other == null) {
        return;
      }
      if (other.DataType != global::Animus.Data.DataMessage.Types.DataType.Unknown) {
        DataType = other.DataType;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataType = (global::Animus.Data.DataMessage.Types.DataType) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DataType = (global::Animus.Data.DataMessage.Types.DataType) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DataMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum DataType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("IMAGE")] Image = 1,
        [pbr::OriginalName("AUDIO")] Audio = 2,
        [pbr::OriginalName("STRING")] String = 3,
        [pbr::OriginalName("FLOAT32ARR")] Float32Arr = 4,
        [pbr::OriginalName("INT64ARR")] Int64Arr = 5,
        [pbr::OriginalName("COMMAND")] Command = 6,
        [pbr::OriginalName("MOTOR")] Motor = 7,
        [pbr::OriginalName("BLOB")] Blob = 8,
      }

    }
    #endregion

  }

  public sealed partial class Command : pb::IMessage<Command>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      command_ = other.command_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int Command_FieldNumber = 1;
    private string command_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command_ {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Command_ != other.Command_) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Command_.Length != 0) hash ^= Command_.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Command_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command_);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Command_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command_);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Command_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command_);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Command_.Length != 0) {
        Command_ = other.Command_;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Command_ = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Command_ = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Transform : pb::IMessage<Transform>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Transform> _parser = new pb::MessageParser<Transform>(() => new Transform());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform(Transform other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      quaternion_ = other.quaternion_ != null ? other.quaternion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform Clone() {
      return new Transform(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Animus.Data.AnimusVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.AnimusVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "quaternion" field.</summary>
    public const int QuaternionFieldNumber = 2;
    private global::Animus.Data.AnimusQuaternion quaternion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.AnimusQuaternion Quaternion {
      get { return quaternion_; }
      set {
        quaternion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Quaternion, other.Quaternion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (quaternion_ != null) hash ^= Quaternion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (quaternion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Quaternion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (quaternion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Quaternion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (quaternion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quaternion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transform other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Animus.Data.AnimusVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.quaternion_ != null) {
        if (quaternion_ == null) {
          Quaternion = new global::Animus.Data.AnimusQuaternion();
        }
        Quaternion.MergeFrom(other.Quaternion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (quaternion_ == null) {
              Quaternion = new global::Animus.Data.AnimusQuaternion();
            }
            input.ReadMessage(Quaternion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (quaternion_ == null) {
              Quaternion = new global::Animus.Data.AnimusQuaternion();
            }
            input.ReadMessage(Quaternion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnimusQuaternion : pb::IMessage<AnimusQuaternion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimusQuaternion> _parser = new pb::MessageParser<AnimusQuaternion>(() => new AnimusQuaternion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnimusQuaternion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusQuaternion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusQuaternion(AnimusQuaternion other) : this() {
      quatX_ = other.quatX_;
      quatY_ = other.quatY_;
      quatW_ = other.quatW_;
      quatZ_ = other.quatZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusQuaternion Clone() {
      return new AnimusQuaternion(this);
    }

    /// <summary>Field number for the "quat_x" field.</summary>
    public const int QuatXFieldNumber = 1;
    private float quatX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float QuatX {
      get { return quatX_; }
      set {
        quatX_ = value;
      }
    }

    /// <summary>Field number for the "quat_y" field.</summary>
    public const int QuatYFieldNumber = 2;
    private float quatY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float QuatY {
      get { return quatY_; }
      set {
        quatY_ = value;
      }
    }

    /// <summary>Field number for the "quat_w" field.</summary>
    public const int QuatWFieldNumber = 3;
    private float quatW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float QuatW {
      get { return quatW_; }
      set {
        quatW_ = value;
      }
    }

    /// <summary>Field number for the "quat_z" field.</summary>
    public const int QuatZFieldNumber = 4;
    private float quatZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float QuatZ {
      get { return quatZ_; }
      set {
        quatZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnimusQuaternion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnimusQuaternion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(QuatX, other.QuatX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(QuatY, other.QuatY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(QuatW, other.QuatW)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(QuatZ, other.QuatZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuatX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(QuatX);
      if (QuatY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(QuatY);
      if (QuatW != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(QuatW);
      if (QuatZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(QuatZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuatX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(QuatX);
      }
      if (QuatY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(QuatY);
      }
      if (QuatW != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(QuatW);
      }
      if (QuatZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(QuatZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuatX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(QuatX);
      }
      if (QuatY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(QuatY);
      }
      if (QuatW != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(QuatW);
      }
      if (QuatZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(QuatZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuatX != 0F) {
        size += 1 + 4;
      }
      if (QuatY != 0F) {
        size += 1 + 4;
      }
      if (QuatW != 0F) {
        size += 1 + 4;
      }
      if (QuatZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnimusQuaternion other) {
      if (other == null) {
        return;
      }
      if (other.QuatX != 0F) {
        QuatX = other.QuatX;
      }
      if (other.QuatY != 0F) {
        QuatY = other.QuatY;
      }
      if (other.QuatW != 0F) {
        QuatW = other.QuatW;
      }
      if (other.QuatZ != 0F) {
        QuatZ = other.QuatZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            QuatX = input.ReadFloat();
            break;
          }
          case 21: {
            QuatY = input.ReadFloat();
            break;
          }
          case 29: {
            QuatW = input.ReadFloat();
            break;
          }
          case 37: {
            QuatZ = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            QuatX = input.ReadFloat();
            break;
          }
          case 21: {
            QuatY = input.ReadFloat();
            break;
          }
          case 29: {
            QuatW = input.ReadFloat();
            break;
          }
          case 37: {
            QuatZ = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnimusVector3 : pb::IMessage<AnimusVector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimusVector3> _parser = new pb::MessageParser<AnimusVector3>(() => new AnimusVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnimusVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusVector3(AnimusVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimusVector3 Clone() {
      return new AnimusVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnimusVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnimusVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnimusVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndEffector : pb::IMessage<EndEffector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndEffector> _parser = new pb::MessageParser<EndEffector>(() => new EndEffector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndEffector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndEffector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndEffector(EndEffector other) : this() {
      name_ = other.name_;
      transform_ = other.transform_ != null ? other.transform_.Clone() : null;
      enabled_ = other.enabled_;
      angles_ = other.angles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndEffector Clone() {
      return new EndEffector(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 2;
    private global::Animus.Data.Transform transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.Transform Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 3;
    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "angles" field.</summary>
    public const int AnglesFieldNumber = 4;
    private static readonly pb::FieldCodec<float> _repeated_angles_codec
        = pb::FieldCodec.ForFloat(34);
    private readonly pbc::RepeatedField<float> angles_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Angles {
      get { return angles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndEffector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndEffector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      if (Enabled != other.Enabled) return false;
      if(!angles_.Equals(other.angles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      hash ^= angles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (Enabled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enabled);
      }
      angles_.WriteTo(output, _repeated_angles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (Enabled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enabled);
      }
      angles_.WriteTo(ref output, _repeated_angles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      size += angles_.CalculateSize(_repeated_angles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndEffector other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          Transform = new global::Animus.Data.Transform();
        }
        Transform.MergeFrom(other.Transform);
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      angles_.Add(other.angles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 24: {
            Enabled = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            angles_.AddEntriesFrom(input, _repeated_angles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 24: {
            Enabled = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            angles_.AddEntriesFrom(ref input, _repeated_angles_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EndEffector message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AngleType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("RADIANS")] Radians = 1,
        [pbr::OriginalName("DEGREES")] Degrees = 2,
      }

    }
    #endregion

  }

  public sealed partial class MotorSample : pb::IMessage<MotorSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MotorSample> _parser = new pb::MessageParser<MotorSample>(() => new MotorSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MotorSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotorSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotorSample(MotorSample other) : this() {
      head_ = other.head_ != null ? other.head_.Clone() : null;
      locomotion_ = other.locomotion_ != null ? other.locomotion_.Clone() : null;
      endEffectors_ = other.endEffectors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotorSample Clone() {
      return new MotorSample(this);
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 1;
    private global::Animus.Data.AnimusVector3 head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.AnimusVector3 Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "Locomotion" field.</summary>
    public const int LocomotionFieldNumber = 2;
    private global::Animus.Data.AnimusVector3 locomotion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.AnimusVector3 Locomotion {
      get { return locomotion_; }
      set {
        locomotion_ = value;
      }
    }

    /// <summary>Field number for the "EndEffectors" field.</summary>
    public const int EndEffectorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Animus.Data.EndEffector> _repeated_endEffectors_codec
        = pb::FieldCodec.ForMessage(26, global::Animus.Data.EndEffector.Parser);
    private readonly pbc::RepeatedField<global::Animus.Data.EndEffector> endEffectors_ = new pbc::RepeatedField<global::Animus.Data.EndEffector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Data.EndEffector> EndEffectors {
      get { return endEffectors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MotorSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MotorSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Locomotion, other.Locomotion)) return false;
      if(!endEffectors_.Equals(other.endEffectors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (head_ != null) hash ^= Head.GetHashCode();
      if (locomotion_ != null) hash ^= Locomotion.GetHashCode();
      hash ^= endEffectors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (locomotion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Locomotion);
      }
      endEffectors_.WriteTo(output, _repeated_endEffectors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (locomotion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Locomotion);
      }
      endEffectors_.WriteTo(ref output, _repeated_endEffectors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (locomotion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Locomotion);
      }
      size += endEffectors_.CalculateSize(_repeated_endEffectors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MotorSample other) {
      if (other == null) {
        return;
      }
      if (other.head_ != null) {
        if (head_ == null) {
          Head = new global::Animus.Data.AnimusVector3();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.locomotion_ != null) {
        if (locomotion_ == null) {
          Locomotion = new global::Animus.Data.AnimusVector3();
        }
        Locomotion.MergeFrom(other.Locomotion);
      }
      endEffectors_.Add(other.endEffectors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (locomotion_ == null) {
              Locomotion = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Locomotion);
            break;
          }
          case 26: {
            endEffectors_.AddEntriesFrom(input, _repeated_endEffectors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (locomotion_ == null) {
              Locomotion = new global::Animus.Data.AnimusVector3();
            }
            input.ReadMessage(Locomotion);
            break;
          }
          case 26: {
            endEffectors_.AddEntriesFrom(ref input, _repeated_endEffectors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImageSamples : pb::IMessage<ImageSamples>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageSamples> _parser = new pb::MessageParser<ImageSamples>(() => new ImageSamples());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageSamples> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSamples() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSamples(ImageSamples other) : this() {
      samples_ = other.samples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSamples Clone() {
      return new ImageSamples(this);
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Animus.Data.ImageSample> _repeated_samples_codec
        = pb::FieldCodec.ForMessage(10, global::Animus.Data.ImageSample.Parser);
    private readonly pbc::RepeatedField<global::Animus.Data.ImageSample> samples_ = new pbc::RepeatedField<global::Animus.Data.ImageSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Data.ImageSample> Samples {
      get { return samples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageSamples);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageSamples other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!samples_.Equals(other.samples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= samples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      samples_.WriteTo(output, _repeated_samples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      samples_.WriteTo(ref output, _repeated_samples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += samples_.CalculateSize(_repeated_samples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageSamples other) {
      if (other == null) {
        return;
      }
      samples_.Add(other.samples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            samples_.AddEntriesFrom(input, _repeated_samples_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            samples_.AddEntriesFrom(ref input, _repeated_samples_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImageSample : pb::IMessage<ImageSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageSample> _parser = new pb::MessageParser<ImageSample>(() => new ImageSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSample(ImageSample other) : this() {
      source_ = other.source_;
      data_ = other.data_;
      dataShape_ = other.dataShape_.Clone();
      compression_ = other.compression_;
      imageType_ = other.imageType_;
      transform_ = other.transform_ != null ? other.transform_.Clone() : null;
      frameNumber_ = other.frameNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSample Clone() {
      return new ImageSample(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_shape" field.</summary>
    public const int DataShapeFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_dataShape_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> dataShape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> DataShape {
      get { return dataShape_; }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 4;
    private global::Animus.Data.ImageSample.Types.CompressionFormat compression_ = global::Animus.Data.ImageSample.Types.CompressionFormat.H264;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.ImageSample.Types.CompressionFormat Compression {
      get { return compression_; }
      set {
        compression_ = value;
      }
    }

    /// <summary>Field number for the "image_type" field.</summary>
    public const int ImageTypeFieldNumber = 5;
    private global::Animus.Data.ImageSample.Types.ImageType imageType_ = global::Animus.Data.ImageSample.Types.ImageType.Rgb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.ImageSample.Types.ImageType ImageType {
      get { return imageType_; }
      set {
        imageType_ = value;
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 6;
    private global::Animus.Data.Transform transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.Transform Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "frame_number" field.</summary>
    public const int FrameNumberFieldNumber = 7;
    private ulong frameNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FrameNumber {
      get { return frameNumber_; }
      set {
        frameNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (Data != other.Data) return false;
      if(!dataShape_.Equals(other.dataShape_)) return false;
      if (Compression != other.Compression) return false;
      if (ImageType != other.ImageType) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      if (FrameNumber != other.FrameNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      hash ^= dataShape_.GetHashCode();
      if (Compression != global::Animus.Data.ImageSample.Types.CompressionFormat.H264) hash ^= Compression.GetHashCode();
      if (ImageType != global::Animus.Data.ImageSample.Types.ImageType.Rgb) hash ^= ImageType.GetHashCode();
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (FrameNumber != 0UL) hash ^= FrameNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      dataShape_.WriteTo(output, _repeated_dataShape_codec);
      if (Compression != global::Animus.Data.ImageSample.Types.CompressionFormat.H264) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Compression);
      }
      if (ImageType != global::Animus.Data.ImageSample.Types.ImageType.Rgb) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageType);
      }
      if (transform_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Transform);
      }
      if (FrameNumber != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(FrameNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      dataShape_.WriteTo(ref output, _repeated_dataShape_codec);
      if (Compression != global::Animus.Data.ImageSample.Types.CompressionFormat.H264) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Compression);
      }
      if (ImageType != global::Animus.Data.ImageSample.Types.ImageType.Rgb) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageType);
      }
      if (transform_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Transform);
      }
      if (FrameNumber != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(FrameNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      size += dataShape_.CalculateSize(_repeated_dataShape_codec);
      if (Compression != global::Animus.Data.ImageSample.Types.CompressionFormat.H264) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (ImageType != global::Animus.Data.ImageSample.Types.ImageType.Rgb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImageType);
      }
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (FrameNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FrameNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageSample other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      dataShape_.Add(other.dataShape_);
      if (other.Compression != global::Animus.Data.ImageSample.Types.CompressionFormat.H264) {
        Compression = other.Compression;
      }
      if (other.ImageType != global::Animus.Data.ImageSample.Types.ImageType.Rgb) {
        ImageType = other.ImageType;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          Transform = new global::Animus.Data.Transform();
        }
        Transform.MergeFrom(other.Transform);
      }
      if (other.FrameNumber != 0UL) {
        FrameNumber = other.FrameNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            dataShape_.AddEntriesFrom(input, _repeated_dataShape_codec);
            break;
          }
          case 32: {
            Compression = (global::Animus.Data.ImageSample.Types.CompressionFormat) input.ReadEnum();
            break;
          }
          case 40: {
            ImageType = (global::Animus.Data.ImageSample.Types.ImageType) input.ReadEnum();
            break;
          }
          case 50: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 56: {
            FrameNumber = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            dataShape_.AddEntriesFrom(ref input, _repeated_dataShape_codec);
            break;
          }
          case 32: {
            Compression = (global::Animus.Data.ImageSample.Types.CompressionFormat) input.ReadEnum();
            break;
          }
          case 40: {
            ImageType = (global::Animus.Data.ImageSample.Types.ImageType) input.ReadEnum();
            break;
          }
          case 50: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 56: {
            FrameNumber = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ImageSample message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompressionFormat {
        [pbr::OriginalName("H264")] H264 = 0,
        [pbr::OriginalName("VP8")] Vp8 = 1,
        [pbr::OriginalName("VP9")] Vp9 = 2,
        [pbr::OriginalName("JPG")] Jpg = 3,
        [pbr::OriginalName("RAW")] Raw = 4,
      }

      public enum ImageType {
        [pbr::OriginalName("RGB")] Rgb = 0,
        [pbr::OriginalName("DEPTH")] Depth = 1,
      }

    }
    #endregion

  }

  public sealed partial class BlobSample : pb::IMessage<BlobSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlobSample> _parser = new pb::MessageParser<BlobSample>(() => new BlobSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSample(BlobSample other) : this() {
      bytesArray_ = other.bytesArray_.Clone();
      intArray_ = other.intArray_.Clone();
      floatArray_ = other.floatArray_.Clone();
      string_ = other.string_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSample Clone() {
      return new BlobSample(this);
    }

    /// <summary>Field number for the "BytesArray" field.</summary>
    public const int BytesArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_bytesArray_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> bytesArray_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> BytesArray {
      get { return bytesArray_; }
    }

    /// <summary>Field number for the "IntArray" field.</summary>
    public const int IntArrayFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_intArray_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> intArray_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> IntArray {
      get { return intArray_; }
    }

    /// <summary>Field number for the "FloatArray" field.</summary>
    public const int FloatArrayFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_floatArray_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> floatArray_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FloatArray {
      get { return floatArray_; }
    }

    /// <summary>Field number for the "String" field.</summary>
    public const int StringFieldNumber = 4;
    private string string_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String {
      get { return string_; }
      set {
        string_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bytesArray_.Equals(other.bytesArray_)) return false;
      if(!intArray_.Equals(other.intArray_)) return false;
      if(!floatArray_.Equals(other.floatArray_)) return false;
      if (String != other.String) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bytesArray_.GetHashCode();
      hash ^= intArray_.GetHashCode();
      hash ^= floatArray_.GetHashCode();
      if (String.Length != 0) hash ^= String.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bytesArray_.WriteTo(output, _repeated_bytesArray_codec);
      intArray_.WriteTo(output, _repeated_intArray_codec);
      floatArray_.WriteTo(output, _repeated_floatArray_codec);
      if (String.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(String);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bytesArray_.WriteTo(ref output, _repeated_bytesArray_codec);
      intArray_.WriteTo(ref output, _repeated_intArray_codec);
      floatArray_.WriteTo(ref output, _repeated_floatArray_codec);
      if (String.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(String);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bytesArray_.CalculateSize(_repeated_bytesArray_codec);
      size += intArray_.CalculateSize(_repeated_intArray_codec);
      size += floatArray_.CalculateSize(_repeated_floatArray_codec);
      if (String.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobSample other) {
      if (other == null) {
        return;
      }
      bytesArray_.Add(other.bytesArray_);
      intArray_.Add(other.intArray_);
      floatArray_.Add(other.floatArray_);
      if (other.String.Length != 0) {
        String = other.String;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bytesArray_.AddEntriesFrom(input, _repeated_bytesArray_codec);
            break;
          }
          case 18:
          case 16: {
            intArray_.AddEntriesFrom(input, _repeated_intArray_codec);
            break;
          }
          case 26:
          case 29: {
            floatArray_.AddEntriesFrom(input, _repeated_floatArray_codec);
            break;
          }
          case 34: {
            String = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bytesArray_.AddEntriesFrom(ref input, _repeated_bytesArray_codec);
            break;
          }
          case 18:
          case 16: {
            intArray_.AddEntriesFrom(ref input, _repeated_intArray_codec);
            break;
          }
          case 26:
          case 29: {
            floatArray_.AddEntriesFrom(ref input, _repeated_floatArray_codec);
            break;
          }
          case 34: {
            String = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AudioSamples : pb::IMessage<AudioSamples>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioSamples> _parser = new pb::MessageParser<AudioSamples>(() => new AudioSamples());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioSamples> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSamples() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSamples(AudioSamples other) : this() {
      samples_ = other.samples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSamples Clone() {
      return new AudioSamples(this);
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Animus.Data.AudioSample> _repeated_samples_codec
        = pb::FieldCodec.ForMessage(10, global::Animus.Data.AudioSample.Parser);
    private readonly pbc::RepeatedField<global::Animus.Data.AudioSample> samples_ = new pbc::RepeatedField<global::Animus.Data.AudioSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Animus.Data.AudioSample> Samples {
      get { return samples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioSamples);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioSamples other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!samples_.Equals(other.samples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= samples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      samples_.WriteTo(output, _repeated_samples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      samples_.WriteTo(ref output, _repeated_samples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += samples_.CalculateSize(_repeated_samples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioSamples other) {
      if (other == null) {
        return;
      }
      samples_.Add(other.samples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            samples_.AddEntriesFrom(input, _repeated_samples_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            samples_.AddEntriesFrom(ref input, _repeated_samples_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AudioSample : pb::IMessage<AudioSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioSample> _parser = new pb::MessageParser<AudioSample>(() => new AudioSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSample(AudioSample other) : this() {
      source_ = other.source_;
      data_ = other.data_;
      channels_ = other.channels_;
      sampleRate_ = other.sampleRate_;
      numSamples_ = other.numSamples_;
      compression_ = other.compression_;
      transform_ = other.transform_ != null ? other.transform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioSample Clone() {
      return new AudioSample(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channels" field.</summary>
    public const int ChannelsFieldNumber = 3;
    private uint channels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Channels {
      get { return channels_; }
      set {
        channels_ = value;
      }
    }

    /// <summary>Field number for the "sample_rate" field.</summary>
    public const int SampleRateFieldNumber = 4;
    private ulong sampleRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SampleRate {
      get { return sampleRate_; }
      set {
        sampleRate_ = value;
      }
    }

    /// <summary>Field number for the "num_samples" field.</summary>
    public const int NumSamplesFieldNumber = 5;
    private ulong numSamples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NumSamples {
      get { return numSamples_; }
      set {
        numSamples_ = value;
      }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 6;
    private global::Animus.Data.AudioSample.Types.CompressionFormat compression_ = global::Animus.Data.AudioSample.Types.CompressionFormat.Raw;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.AudioSample.Types.CompressionFormat Compression {
      get { return compression_; }
      set {
        compression_ = value;
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 7;
    private global::Animus.Data.Transform transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Animus.Data.Transform Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (Data != other.Data) return false;
      if (Channels != other.Channels) return false;
      if (SampleRate != other.SampleRate) return false;
      if (NumSamples != other.NumSamples) return false;
      if (Compression != other.Compression) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Channels != 0) hash ^= Channels.GetHashCode();
      if (SampleRate != 0UL) hash ^= SampleRate.GetHashCode();
      if (NumSamples != 0UL) hash ^= NumSamples.GetHashCode();
      if (Compression != global::Animus.Data.AudioSample.Types.CompressionFormat.Raw) hash ^= Compression.GetHashCode();
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Channels != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Channels);
      }
      if (SampleRate != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(SampleRate);
      }
      if (NumSamples != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumSamples);
      }
      if (Compression != global::Animus.Data.AudioSample.Types.CompressionFormat.Raw) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Compression);
      }
      if (transform_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Transform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Channels != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Channels);
      }
      if (SampleRate != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(SampleRate);
      }
      if (NumSamples != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(NumSamples);
      }
      if (Compression != global::Animus.Data.AudioSample.Types.CompressionFormat.Raw) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Compression);
      }
      if (transform_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Transform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Channels != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Channels);
      }
      if (SampleRate != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SampleRate);
      }
      if (NumSamples != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumSamples);
      }
      if (Compression != global::Animus.Data.AudioSample.Types.CompressionFormat.Raw) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioSample other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Channels != 0) {
        Channels = other.Channels;
      }
      if (other.SampleRate != 0UL) {
        SampleRate = other.SampleRate;
      }
      if (other.NumSamples != 0UL) {
        NumSamples = other.NumSamples;
      }
      if (other.Compression != global::Animus.Data.AudioSample.Types.CompressionFormat.Raw) {
        Compression = other.Compression;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          Transform = new global::Animus.Data.Transform();
        }
        Transform.MergeFrom(other.Transform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Channels = input.ReadUInt32();
            break;
          }
          case 32: {
            SampleRate = input.ReadUInt64();
            break;
          }
          case 40: {
            NumSamples = input.ReadUInt64();
            break;
          }
          case 48: {
            Compression = (global::Animus.Data.AudioSample.Types.CompressionFormat) input.ReadEnum();
            break;
          }
          case 58: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Channels = input.ReadUInt32();
            break;
          }
          case 32: {
            SampleRate = input.ReadUInt64();
            break;
          }
          case 40: {
            NumSamples = input.ReadUInt64();
            break;
          }
          case 48: {
            Compression = (global::Animus.Data.AudioSample.Types.CompressionFormat) input.ReadEnum();
            break;
          }
          case 58: {
            if (transform_ == null) {
              Transform = new global::Animus.Data.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AudioSample message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompressionFormat {
        [pbr::OriginalName("RAW")] Raw = 0,
        [pbr::OriginalName("SPEEX")] Speex = 1,
      }

    }
    #endregion

  }

  public sealed partial class StringSample : pb::IMessage<StringSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringSample> _parser = new pb::MessageParser<StringSample>(() => new StringSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSample(StringSample other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringSample Clone() {
      return new StringSample(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringSample other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Float32Array : pb::IMessage<Float32Array>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Float32Array> _parser = new pb::MessageParser<Float32Array>(() => new Float32Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Float32Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float32Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float32Array(Float32Array other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float32Array Clone() {
      return new Float32Array(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_data_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> data_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Float32Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Float32Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Float32Array other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Int64Array : pb::IMessage<Int64Array>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Int64Array> _parser = new pb::MessageParser<Int64Array>(() => new Int64Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int64Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Animus.Data.AnimusDataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array(Int64Array other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array Clone() {
      return new Int64Array(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_data_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> data_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int64Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int64Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int64Array other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
